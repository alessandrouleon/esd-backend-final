// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Shift {
  id          String     @id @default(uuid())
  code        String     @db.VarChar(56)
  description String     @db.VarChar(56)
  createdAt   DateTime   @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt   DateTime?  @db.DateTime
  deletedAt   DateTime?  @db.DateTime
  Employee    Employee[]

  @@map("shifts")
}

model Department {
  id          String     @id @default(uuid())
  code        String     @db.VarChar(56)
  description String     @db.VarChar(56)
  createdAt   DateTime   @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt   DateTime?  @db.DateTime
  deletedAt   DateTime?  @db.DateTime
  Employee    Employee[]

  @@map("departments")
}

model Line {
  id          String     @id @default(uuid())
  code        String     @db.VarChar(56)
  description String     @db.VarChar(56)
  createdAt   DateTime   @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt   DateTime?  @db.DateTime
  deletedAt   DateTime?  @db.DateTime
  Employee    Employee[]

  @@map("lines")
}

model Employee {
  id           String     @id @default(uuid())
  name         String     @unique @db.VarChar(56)
  registration String     @unique @db.VarChar(56)
  boot         String     @db.Char(3)
  bracelete    String     @db.Char(3)
  status       String     @db.Char(56)
  imageId      String?    @unique @db.VarChar(256)
  Shift        Shift      @relation(fields: [shiftId], references: [id])
  shiftId      String
  Department   Department @relation(fields: [departmentId], references: [id])
  departmentId String
  Line         Line       @relation(fields: [lineId], references: [id])
  lineId       String
  createdAt    DateTime   @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt    DateTime?  @db.DateTime
  deletedAt    DateTime?  @db.DateTime

  @@map("employees")
}
